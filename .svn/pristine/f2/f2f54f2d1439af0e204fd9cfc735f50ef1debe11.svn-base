@model  Dal.Models.User
@{
    ViewBag.Title = "Perfil";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Perfil de usuario</h2>

<div class="row">
    <div class="col-md-4 col-lg-4 col-sm-12 col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Editar tu perfil
            </div>
            <div class="panel-body">
                <form class="form" method="POST" action="/account/updateinfo">
                    <div class="form-group">
                        <label for="UserName">Nombre</label>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @id = "UserName", @required = "true", @type = "text" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="Email">Correo electr&oacute;nico</label>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "Email", @required = "true", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <p>
                            *Importante: Al efectuar el cambio de correo electr&oacute;nico tu sesi&oacute;n cerrar&aacute; automaticamente.
                        </p>
                        <p>
                            Simplemente deber&aacute;s iniciar sesi&oacute;n nuevamente con tu nuevo correo.
                        </p>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-default">
                            Guardar cambios
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-lg-3 col-sm-12 col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Cambia tu foto de perfil
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12 col-xs-12 col-sm-12">
                        <div class="form-group">
                            <a href="#" class="thumbnail" style="width:100%; height: auto; padding:0">
                                <div id="dragandrophandler" style="position:relative" class="text-center">
                                    <img src="~/Content/data/@Model.ImageProfile" id="ImageProfile" style="width:100% !important; height:auto !important">
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <p>Arrastra aqu&iacute; tu imagen de perfil</p>
                            <p id="replace">Nota: Tu imagen de perfil se modificar&aacute; automaticamente al arrastrar una nueva.</p>
                        </div>
                        <div class="form-group">
                            <div id="bar">
                            </div>
                        </div>
                        <div class="form-group">
                            <div id="status1"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function sendFileToServer(formData, status) {
        var uploadURL = '@Url.Action("SaveImageProfile", "Account")'; //Upload URL
        var extraData = {}; //Extra Data.
        var jqXHR = $.ajax({
            xhr: function () {
                var xhrobj = $.ajaxSettings.xhr();
                if (xhrobj.upload) {
                    xhrobj.upload.addEventListener('progress', function (event) {
                        var percent = 0;
                        var position = event.loaded || event.position;
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                        }
                        //Set progress
                        status.setProgress(percent);
                    }, false);
                }
                return xhrobj;
            },
            url: uploadURL,
            type: "POST",
            contentType: false,
            processData: false,
            cache: false,
            data: formData,
            success: function (data) {
                status.setProgress(100);
                //$("#ImageProfile").removeAttr("src");
                $("#ImageProfile").attr("src", "~/Content/data/" + data.ImageCode);
                $("#status1").html(data.Message);
            }
        });

        status.setAbort(jqXHR);
    }

    var rowCount = 0;
    function createStatusbar(obj) {
        rowCount++;
        var row = "odd";
        if (rowCount % 2 == 0) row = "even";
        this.statusbar = $("<div class='statusbar " + row + "'></div>");
        this.filename = $("<div class='filename'></div>").appendTo(this.statusbar);
        this.size = $("<div class='filesize'></div>").appendTo(this.statusbar);
        this.progressBar = $("<div class='progressBar'><div></div></div>").appendTo(this.statusbar);
        this.abort = $("<div class='abort'>Abort</div>").appendTo(this.statusbar);
        $("#replace").replaceWith(this.statusbar);

        this.setFileNameSize = function (name, size) {
            var sizeStr = "";
            var sizeKB = size / 1024;
            if (parseInt(sizeKB) > 1024) {
                var sizeMB = sizeKB / 1024;
                sizeStr = sizeMB.toFixed(2) + " MB";
            }
            else {
                sizeStr = sizeKB.toFixed(2) + " KB";
            }

            this.filename.html(name);
            this.size.html(sizeStr);
        }
        this.setProgress = function (progress) {
            var progressBarWidth = progress * this.progressBar.width() / 100;
            this.progressBar.find('div').animate({ width: progressBarWidth }, 10).html(progress + "% ");
            if (parseInt(progress) >= 100) {
                this.abort.hide();
            }
        }
        this.setAbort = function (jqxhr) {
            var sb = this.statusbar;
            this.abort.click(function () {
                jqxhr.abort();
                sb.hide();
            });
        }
    }
    function handleFileUpload(files, obj) {
        for (var i = 0; i < files.length; i++) {
            var fd = new FormData();
            fd.append('file', files[i]);

            var status = new createStatusbar(obj); //Using this we can set progress.
            status.setFileNameSize(files[i].name, files[i].size);
            sendFileToServer(fd, status);

        }
    }
    $(document).ready(function () {
        var obj = $("#dragandrophandler");
        obj.on('dragenter', function (e) {
            e.stopPropagation();
            e.preventDefault();

        });
        obj.on('dragover', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        obj.on('drop', function (e) {

            e.preventDefault();
            var files = e.originalEvent.dataTransfer.files;

            //We need to send dropped files to Server
            handleFileUpload(files, obj);
        });
        $(document).on('dragenter', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        $(document).on('dragover', function (e) {
            e.stopPropagation();
            e.preventDefault();

        });
        $(document).on('drop', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });

    });
</script>